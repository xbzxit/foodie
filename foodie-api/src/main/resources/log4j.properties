log4j.rootLogger=DEBUG,stdout,file
log4j.additivity.org.apache=true

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}%F:%C:%M:%L - %m%n
#最强大的格式化期，可以根据自定义格式输出日志，如果没有指定转换格式，就是用默认的转换格式
#
#1. %c %c{数字} 输出日志器的名称
#
#日志器名称为：com.linxingyang.Test1
#
#%c | %c{1} | %c{2} | %c{3} | %c{4}分别输出com.linxingyang.Test1 | Test1 | linxingyang.Test1 | com.linxingyang.Test1 | com.linxingyang.Test1
#
#%C %C{数字} 输出调用者的名称
#%d 输出打印日志的日期时间**
#常用的格式有 %d{DATE}, %d{ABSOLUTE}, %d{HH:mm:ss,SSS}, %d{ddMMyyyy HH:mm:ss,SSS}
#
#%n - 换行
#%m - 日志内容
#%p - 日志级别(FATAL, ERROR, WARN, INFO, DEBUG or custom)
#%r - 程序启动到现在的毫秒数
#%t - 当前线程名
#%l - 同 %F%L%C%M
#%F - java源文件名
#%L - java源码行数
#%C - java类名,%C{1} 输出最后一个元素
#%M-java方法名
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.DatePattern='.'yyyy-MM-dd-HH-mm
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}%F:%C:%M:%L - %m%n
log4j.appender.file.Threshold=DEBUG
log4j.appender.file.append=true
log4j.appender.file.File=/workspaces/logs/foodie-api/xbzxit.log
